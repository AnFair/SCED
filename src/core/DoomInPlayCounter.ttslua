local playmatApi = require("playermat/PlaymatApi")

local ZONE, TRASH
local doomURL    = "https://i.imgur.com/EoL7yaZ.png"
local IGNORE_TAG = "DoomCounter_ignore"
local COLORS     = { "White", "Orange", "Green", "Red" }

-- create button, context menu and start loop
function onLoad()
  self.createButton({
    label = tostring(0),
    click_function = "none",
    function_owner = self,
    position = { 0, 0.06, 0 },
    height = 0,
    width = 0,
    scale = { 1.5, 1.5, 1.5 },
    font_size = 600,
    font_color = { 1, 1, 1, 100 },
    color = { 0, 0, 0, 0 }
  })

  trash = Global.call("getObjectFromMemo", {matColor = "Mythos", type = "Trash"})
  ZONE = Global.call("getObjectFromMemo", {matColor = "Mythos", type = "PlayAreaZone"})
  loopID = Wait.time(countDoom, 2, -1)
end

-- main function
function countDoom()
  local doom = 0
  for i = 1, 5 do
    if i = 5 then
      objList = ZONE.getObjects()
    else
      objList = playmatApi.searchAroundPlaymat(COLORS[i])
    end

    doom = doom + countDoomFromList(objList)
  end
  self.editButton({ index = 0, label = tostring(doom) })
end

function countDoomFromList(objList)
  local count = 0
  for _, obj in ipairs(objList) do
    count = count + isDoom(obj)
  end
  return count
end

-- checks an object for the doom image and gets quantity (for stacks)
function isDoom(obj)
  if (obj.is_face_down and obj.getCustomObject().image_bottom == doomURL) or
      (obj.name == "Custom_Token" and obj.getCustomObject().image == doomURL) then
    if not obj.hasTag(IGNORE_TAG) then
      return math.abs(obj.getQuantity())
    end
  end
  return 0
end

-- removes doom from playermats / playarea
function removeDoom(options)
  local count = 0

  if options.Playermats then
    for i = 1, 4 do
      count = removeDoomFromList(playmatApi.searchAroundPlaymat(COLORS[i]))
    end
    broadcastToAll(count .. " doom removed from Playermats.", "White")
  end

  if options.Playarea then
    count = removeDoomFromList(ZONE.getObjects())
    broadcastToAll(count .. " doom removed from Playerarea.", "White")
  end
end

-- removes doom from provided object list and returns the removed amount
function removeDoomFromList(objList)
  local count = 0
  for _, obj in ipairs(objList) do
    local amount = isDoom(obj)
    if amount > 0 then
      TRASH.putObject(obj)
      count = count + amount
    end
  end
  return count
end
