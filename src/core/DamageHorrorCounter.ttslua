local MIN_VALUE, MAX_VALUE = 0, 99
val = 0

function updateSave() self.script_state = val end

function onLoad(savedData)
  if savedData and savedData ~= "" then
    val = JSON.decode(savedData)
  end

  self.max_typed_number = MAX_VALUE

  createXml()

  self.addContextMenuItem("Add 5", function() modifyValue(5) end)
  self.addContextMenuItem("Subtract 5", function() modifyValue(-5) end)
  self.addContextMenuItem("Add 10", function() modifyValue(10) end)
  self.addContextMenuItem("Subtract 10", function() modifyValue(-10) end)
end

function getXmlParameters()
  local tokenType = self.getMemo()
  if tokenType == "damage" then
    return {
      size = 600,
      posX = "10",
      posY = "5",
      color = "#FA2A19FC"
    }
  elseif tokenType == "horror" then
    return {
      size = 600,
      posX = "-18",
      posY = "-5",
      color = "#302F6DFC"
    }
  else
    printToAll("Invalid token type")
  end
end

function createXml()
  params = getXmlParameters()
  if not params then return end

  local uiColor, uiFontSize, uiVal = getUiColorSizeAndVal()

  local pos = params.posX .. " " .. params.posY .. " -6"
  local rot = "0 0 180"
  if self.is_face_down then
    pos = params.posX .. " " .. params.posY .. " 6"
    rot = "0 180 180"
  end
  local xml = {
    {
      tag = "Button",
      attributes = {
        id = "xmlBtn",
        image = "circle",
        onClick = "addOrSubtract",
        scale = "0.35 0.35 1",
        colors = uiColor,
        position = pos,
        rotation = rot,
        height = params.size,
        width = params.size
      },
      children = {
        {
          tag = "Text",
          attributes = {
            id = "xmlTxt",
            fontSize = uiFontSize,
            font = "font_arkham-numbers",
            text = uiVal,
            color = "#FFFFFF"
          }
        }
      }
    }
  }
  self.UI.setXmlTable(xml)
end

function onRotate(_, flip, _, _, oldFlip)
  if flip == oldFlip then return end

  if flip == 180 then
    self.UI.setAttribute("xmlBtn", "position", params.posX .. " " .. params.posY .. " 6")
    self.UI.setAttribute("xmlBtn", "rotation", "0 180 180")
  else
    self.UI.setAttribute("xmlBtn", "position", params.posX .. " " .. params.posY .. " -6")
    self.UI.setAttribute("xmlBtn", "rotation", "0 0 180")
  end
end

-- value == 1 -> no label/background
function getUiColorSizeAndVal()
  if val == 1 then
    return getColorBlock("#00000000"), "700", ""
  elseif val < 10 then
    return getColorBlock(params.color), "700", val
  else
    return getColorBlock(params.color), "350", val
  end
end

function getColorBlock(hexColor)
  return table.concat({ hexColor, hexColor, hexColor }, "|")
end

function updateLabel()
  local uiColor, uiFontSize, uiVal = getUiColorSizeAndVal()

  self.UI.setAttribute("xmlBtn", "colors", uiColor)
  self.UI.setAttribute("xmlTxt", "fontSize", uiFontSize)
  self.UI.setAttribute("xmlTxt", "text", uiVal)
end

-- sets the value to 'newVal'
function updateVal(newVal)
  if tonumber(newVal) then
    val = math.min(math.max(newVal, MIN_VALUE), MAX_VALUE)
    updateLabel()
    updateSave()
  end
end

-- modifies the value by 'mod'
function modifyValue(mod)
  local newVal = math.min(math.max(val + tonumber(mod), MIN_VALUE), MAX_VALUE)
  updateVal(newVal)
end

-- left-click: increase / right-click: decrease / middle-click: reset
function addOrSubtract(_, clickType)
  local mod = 1
  if clickType == "-2" then
    mod = -1
  elseif clickType == "-3" then
    updateVal(1)
    return
  end
  modifyValue(mod)
end

function onNumberTyped(_, number)
  updateVal(number)
end
