VALID_TOKENS = {
  ["+1"] = true,
  ["0"] = true,
  ["-1"] = true,
  ["-2"] = true,
  ["-3"] = true,
  ["-4"] = true,
  ["-5"] = true,
  ["-6"] = true,
  ["-7"] = true,
  ["-8"] = true
}

MAX_SEALED = 1
RESOLVE_TOKEN = true
hasXML = true
isHelperEnabled = false

require("playercards/CardsThatSealTokens")
require("playercards/CardsWithHelper")
local ChaosBagApi = require("chaosbag/ChaosBagApi")

function updateSave()
  self.script_state = JSON.encode({ isHelperEnabled = isHelperEnabled })
end

function onLoad(savedData)
  if savedData and savedData ~= "" then
    local loadedData = JSON.decode(savedData)
    isHelperEnabled = loadedData.isHelperEnabled
  end
  createHelperXML()
  if isHelperEnabled then
    updateDisplay()
  end
  if onLoad2 then onLoad2(savedData) end
end

function onLoad2(savedData)
    MAX_SEALED = MAX_SEALED or 99

  -- verify sealed tokens
  for _, guid in ipairs(JSON.decode(savedData) or {}) do
    local token = getObjectFromGUID(guid)
    if token ~= nil then
      table.insert(sealedTokens, guid)
    end
  end

  ID_URL_MAP = ChaosBagApi.getIdUrlMap()
  generateContextMenu()
  updateStackSize()
  self.addTag("CardThatSeals")
end

function createHelperXML()
  local xmlTable = { {
    tag = "Button",
    attributes = {
      active = "false",
      id = "Helper",
      height = buttonHeight or 450,
      width = buttonWidth or 1400,
      rotation = buttonRotation or "0 0 180",
      scale = "0.1 0.1 1",
      position = buttonPosition or "0 110 -40",
      padding = "50 50 50 50",
      font = "font_teutonic-arkham",
      fontSize = buttonFontSize or 250,
      onClick = "triggerXMLTokenLabelCreation",
      color = buttonColor or "#77674DE6",
      textColor = "White"
    },
    value = buttonLabel or "Seal/Resolve Token"
  } }
  if buttonIcon then
    xmlTable[1].attributes.iconWidth = "400"
    xmlTable[1].attributes.iconAlignment = "Right"
    xmlTable[1].attributes.icon = buttonIcon
  end
  self.UI.setXmlTable(xmlTable)
end

function triggerXMLTokenLabelCreation(player)
  local sealedTokens = getSealedTokens()
  local playerColor = player.color
  if #sealedTokens == 0 then
    local oculaGUID = self.getGUID()
    ChaosBagApi.sealTokenFromPlay(VALID_TOKENS, _, oculaGUID, playerColor)
  else
    resolveSealed(playerColor)
  end
end

function sealTokenWrapper(params)
  sealToken(params.tokenName, params.playerColor)
end