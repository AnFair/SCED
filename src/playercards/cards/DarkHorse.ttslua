require("playercards/CardsWithHelper")
local GUIDReferenceApi = require("core/GUIDReferenceApi")
local PlayermatApi     = require("playermat/PlayermatApi")

-- intentionally global
hasXML                = true
isHelperEnabled       = false
skipResource          = false

function updateSave()
  self.script_state = JSON.encode({ isHelperEnabled = isHelperEnabled, skipResource = skipResource })
end

function onLoad(savedData)
  if savedData and savedData ~= "" then
    local loadedData = JSON.decode(savedData)
    isHelperEnabled = loadedData.isHelperEnabled
    skipResource = loadedData.skipResource
    if isHelperEnabled then updateDisplay() end
  end

  local matColor = PlayermatApi.getMatColorByPosition(self.getPosition())
  local mat = GUIDReferenceApi.getObjectByOwnerAndType(matColor, "Playermat")
  if skipResource == false then
    mat.setVar("skipUpkeepResource", false)
  else
    mat.setVar("skipUpkeepResource", true)
    self.UI.setAttribute("CARD_Dark_Horse_text", "text", string.gsub(label, "☐", "☑"))
  end
end

function toggleResourceSkip()
  local label = self.UI.getAttribute("CARD_Dark_Horse_text", "text")
  local matColor = PlayermatApi.getMatColorByPosition(self.getPosition())
  local mat = GUIDReferenceApi.getObjectByOwnerAndType(matColor, "Playermat")
  if skipResource == false then
    self.UI.setAttribute("CARD_Dark_Horse_text", "text", string.gsub(label, "☐", "☑"))
    skipResource = true
    mat.setVar("skipUpkeepResource", true)
  else
    self.UI.setAttribute("CARD_Dark_Horse_text", "text", string.gsub(label, "☑", "☐"))
    skipResource = false
    mat.setVar("skipUpkeepResource", false)
  end
end
