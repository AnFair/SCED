do
  local BlessCurseManagerApi = {}
  local internal = {}

  internal.getManager = function()
    return getObjectsWithTag("BlessCurseManager")[1]
  end

  -- removes all taken tokens and resets the counts
  BlessCurseManagerApi.removeTakenTokensAndReset = function()
    local BlessCurseManager = internal.getManager()
    Wait.time(function() BlessCurseManager.call("removeTakenTokens", "Bless") end, 0.05)
    Wait.time(function() BlessCurseManager.call("removeTakenTokens", "Curse") end, 0.10)
    Wait.time(function() BlessCurseManager.call("doReset", "White") end, 0.15)
  end

  -- updates the internal count (called by cards that seal bless/curse tokens)
  BlessCurseManagerApi.sealedToken = function(type, guid)
    internal.getManager().call("sealedToken", { type = type, guid = guid })
  end

  -- updates the internal count (called by cards that seal bless/curse tokens)
  BlessCurseManagerApi.releasedToken = function(type, guid)
    internal.getManager().call("releasedToken", { type = type, guid = guid })
  end

  -- broadcasts the current status for bless/curse tokens
  ---@param playerColor String Color of the player to show the broadcast to
  BlessCurseManagerApi.broadcastStatus = function(playerColor)
    internal.getManager().call("broadcastStatus", playerColor)
  end

  -- removes all bless / curse tokens from the chaos bag and play
  ---@param playerColor String Color of the player to show the broadcast to
  BlessCurseManagerApi.removeAll = function(playerColor)
    internal.getManager().call("doRemove", playerColor)
  end

  -- adds Wendy's menu to the hovered card (allows sealing of tokens)
  ---@param color String Color of the player to show the broadcast to
  BlessCurseManagerApi.addWendysMenu = function(playerColor, hoveredObject)
    internal.getManager().call("addMenuOptions", { playerColor = playerColor, hoveredObject = hoveredObject })
  end
  
  return BlessCurseManagerApi
end
