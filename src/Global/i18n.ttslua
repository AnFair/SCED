LANGUAGES             = {
  { code = "zh_CN", name = "简体中文", font = "font_chinese_fzlibian" },
  { code = "zh_TW", name = "繁體中文", font = "font_chinese_fzlibian" },
  { code = "de", name = "Deutsch", font = "font_teutonic-arkham" },
  { code = "en", name = "English", font = "font_teutonic-arkham" },
  { code = "es", name = "Español", font = "font_teutonic-arkham" },
  { code = "fr", name = "Français", font = "font_teutonic-arkham" },
  { code = "it", name = "Italiano", font = "font_teutonic-arkham" },
  { code = "ru", name = "Русский", font = "font_russian_conkordia" }
}
SPECIAL_FONT_PREFIXES = {
  DW_  = true,
  OP_  = true,
  NO_  = true,
  PAG_ = true,
  BB_  = false
}
i18n                  = {}

function i18n.getStrById(id)
  if I18N_DATA[id] then
    local val = I18N_DATA[id][optionPanel.uiLanguage]
    if val and val ~= "" then
      return val
    end
    return I18N_DATA[id].en or id
  end
  return id
end

---@param code? string Language code
function i18n.getFont(code)
  code = code or optionPanel.uiLanguage
  for _, tbl in ipairs(LANGUAGES) do
    if tbl.code == code then
      return tbl.font
    end
  end
  return "font_teutonic-arkham"
end

function i18n.getFontById(id)
  -- exclude tooltips
  if string.endsWith(id, "tooltip") then return end

  -- get prefix
  local prefix = i18n.getPrefix(id)

  -- exclude objects without prefix
  if not prefix then return end

  -- exclude objects with not-matching prefix
  if not SPECIAL_FONT_PREFIXES[prefix] then return end

  -- get the default font for the current language
  return i18n.getFont()
end

function i18n.getPrefix(str)
  local delimiter = "_"

  -- Find the ending position of the first occurrence of the delimiter
  local endPos = string.find(str, delimiter)

  -- Extract the substring from the beginning to the end of the delimiter
  if endPos then
    return string.sub(str, 1, endPos)
  end
end
