local guidReferenceApi = require("core/GUIDReferenceApi")
local searchLib        = require("util/SearchLib")

exposedValue           = 0

local playermat

function onLoad()
  self.createButton({
    label          = "",
    click_function = "countItems",
    function_owner = self,
    position       = { 0, 0.1, 0 },
    height         = 0,
    width          = 0,
    font_color     = { 0, 0, 0 },
    font_size      = 2000
  })

  -- get owning playermat
  local owner = guidReferenceApi.getOwnerOfObject(self)
  playermat = guidReferenceApi.getObjectByOwnerAndType(owner, "Playermat")

  -- start loop
  Wait.time(countItems, 1.75, -1)
end

-- counts clues on the playermat
function countItems()
  local totalValue = 0
  for _, item in ipairs(getClues()) do
    totalValue = totalValue + math.abs(item.getQuantity())
  end
  exposedValue = totalValue
  self.editButton({ index = 0, label = totalValue })
end

function removeAllClues(trash)
  for _, obj in ipairs(getClues()) do
    trash.putObject(obj)
  end
end

function getClues()
  -- get search parameters (threat area excluded)
  local localPos = playermat.positionToLocal(playermat.getPosition())
  local pos      = playermat.positionToWorld(localPos + Vector(0, 0, 0.4))
  local rot      = playermat.getRotation() + Vector(0, 90, 0)
  local size     = Vector(8, 1, 27)
  local filter   = "isClue"
  return searchLib.inArea(pos, rot, size, filter)
end
